{"ast":null,"code":"import _isEmpty from \"lodash/isEmpty\";\nimport _defaults from \"lodash/defaults\";\nimport _assign from \"lodash/assign\";\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport VictoryPortal from \"../victory-portal/victory-portal\";\nimport CustomPropTypes from \"../victory-util/prop-types\";\nimport Helpers from \"../victory-util/helpers\";\nimport LabelHelpers from \"../victory-util/label-helpers\";\nimport Style from \"../victory-util/style\";\nimport Log from \"../victory-util/log\";\nimport TSpan from \"../victory-primitives/tspan\";\nimport Text from \"../victory-primitives/text\";\nvar defaultStyles = {\n  fill: \"#252525\",\n  fontSize: 14,\n  fontFamily: \"'Gill Sans', 'Gill Sans MT', 'SerÂ­avek', 'Trebuchet MS', sans-serif\",\n  stroke: \"transparent\"\n};\n\nvar getPosition = function (props, dimension) {\n  if (!props.datum) {\n    return 0;\n  }\n\n  var scaledPoint = Helpers.scalePoint(props, props.datum);\n  return scaledPoint[dimension];\n};\n\nvar getFontSize = function (style) {\n  var baseSize = style && style.fontSize;\n\n  if (typeof baseSize === \"number\") {\n    return baseSize;\n  } else if (baseSize === undefined || baseSize === null) {\n    return defaultStyles.fontSize;\n  } else if (typeof baseSize === \"string\") {\n    var fontSize = +baseSize.replace(\"px\", \"\");\n\n    if (!isNaN(fontSize)) {\n      return fontSize;\n    } else {\n      Log.warn(\"fontSize should be expressed as a number of pixels\");\n      return defaultStyles.fontSize;\n    }\n  }\n\n  return defaultStyles.fontSize;\n};\n\nvar getStyles = function (style, props) {\n  var getSingleStyle = function (s) {\n    s = s ? _defaults({}, s, defaultStyles) : defaultStyles;\n    var baseStyles = Helpers.evaluateStyle(s, props);\n    return _assign({}, baseStyles, {\n      fontSize: getFontSize(baseStyles)\n    });\n  };\n\n  return Array.isArray(style) && !_isEmpty(style) ? style.map(function (s) {\n    return getSingleStyle(s);\n  }) : [getSingleStyle(style)];\n};\n\nvar getHeight = function (props, type) {\n  return Helpers.evaluateProp(props[type], props);\n};\n\nvar getContent = function (text, props) {\n  if (text === undefined || text === null) {\n    return undefined;\n  }\n\n  if (Array.isArray(text)) {\n    return text.map(function (line) {\n      return Helpers.evaluateProp(line, props);\n    });\n  }\n\n  var child = Helpers.evaluateProp(text, props);\n\n  if (child === undefined || child === null) {\n    return undefined;\n  }\n\n  return Array.isArray(child) ? child : \"\".concat(child).split(\"\\n\");\n};\n\nvar checkLineHeight = function (lineHeight, val, fallbackVal) {\n  if (Array.isArray(lineHeight)) {\n    return _isEmpty(lineHeight) ? fallbackVal : val;\n  }\n\n  return lineHeight;\n};\n\nvar getDy = function (props, lineHeight) {\n  var style = Array.isArray(props.style) ? props.style[0] : props.style;\n  lineHeight = checkLineHeight(lineHeight, lineHeight[0], 1);\n  var fontSize = style.fontSize;\n  var dy = props.dy ? Helpers.evaluateProp(props.dy, props) : 0;\n  var length = props.text.length;\n  var capHeight = getHeight(props, \"capHeight\");\n  var verticalAnchor = style.verticalAnchor || props.verticalAnchor;\n  var anchor = verticalAnchor ? Helpers.evaluateProp(verticalAnchor, props) : \"middle\";\n\n  switch (anchor) {\n    case \"end\":\n      return dy + (capHeight / 2 + (0.5 - length) * lineHeight) * fontSize;\n\n    case \"middle\":\n      return dy + (capHeight / 2 + (0.5 - length / 2) * lineHeight) * fontSize;\n\n    default:\n      return dy + (capHeight / 2 + lineHeight / 2) * fontSize;\n  }\n};\n\nvar getTransform = function (props) {\n  var x = props.x,\n      y = props.y,\n      polar = props.polar,\n      style = props.style;\n  var defaultAngle = polar ? LabelHelpers.getPolarAngle(props) : 0;\n  var baseAngle = style.angle === undefined ? props.angle : style.angle;\n  var angle = baseAngle === undefined ? defaultAngle : baseAngle;\n  var transform = props.transform || style.transform;\n  var transformPart = transform && Helpers.evaluateProp(transform, props);\n  var rotatePart = angle && {\n    rotate: [angle, x, y]\n  };\n  return transformPart || angle ? Style.toTransformString(transformPart, rotatePart) : undefined;\n};\n\nvar renderElements = function (props) {\n  var inline = props.inline,\n      className = props.className,\n      title = props.title,\n      events = props.events,\n      direction = props.direction,\n      text = props.text,\n      style = props.style;\n  var lineHeight = getHeight(props, \"lineHeight\");\n  var textAnchor = props.textAnchor ? Helpers.evaluateProp(props.textAnchor, props) : \"start\";\n  var dx = props.dx ? Helpers.evaluateProp(props.dx, props) : 0;\n  var dy = getDy(props, lineHeight);\n  var transform = getTransform(props);\n  var x = props.x !== undefined ? props.x : getPosition(props, \"x\");\n  var y = props.y !== undefined ? props.y : getPosition(props, \"y\");\n  var textChildren = text.map(function (line, i) {\n    var currentStyle = style[i] || style[0];\n    var lastStyle = style[i - 1] || style[0];\n    var fontSize = (currentStyle.fontSize + lastStyle.fontSize) / 2;\n    var currentLineHeight = checkLineHeight(lineHeight, (lineHeight[i] + (lineHeight[i - 1] || lineHeight[0])) / 2, 1);\n    var tspanProps = {\n      key: \"\".concat(props.id, \"-key-\").concat(i),\n      x: !inline ? props.x : undefined,\n      dx: dx,\n      dy: i && !inline ? currentLineHeight * fontSize : undefined,\n      textAnchor: currentStyle.textAnchor || textAnchor,\n      style: currentStyle,\n      children: line\n    };\n    return React.cloneElement(props.tspanComponent, tspanProps);\n  });\n  return React.cloneElement(props.textComponent, _objectSpread({}, events, {\n    direction: direction,\n    dx: dx,\n    dy: dy,\n    x: x,\n    y: y,\n    transform: transform,\n    className: className,\n    title: title,\n    desc: Helpers.evaluateProp(props.desc, props),\n    tabIndex: Helpers.evaluateProp(props.tabIndex, props),\n    id: props.id\n  }), textChildren);\n};\n\nvar evaluateProps = function (props) {\n  /* Potential evaluated props are\n    1) text\n    2) style\n    3) everything else\n  */\n  var text = getContent(props.text, props);\n  var style = getStyles(props.style, _assign({}, props, {\n    text: text\n  }));\n  return _assign({}, props, {\n    style: style,\n    text: text\n  });\n};\n\nvar VictoryLabel = function (props) {\n  props = evaluateProps(props);\n\n  if (props.text === null || props.text === undefined) {\n    return null;\n  }\n\n  var label = renderElements(props);\n  return props.renderInPortal ? React.createElement(VictoryPortal, null, label) : label;\n};\n\nVictoryLabel.displayName = \"VictoryLabel\";\nVictoryLabel.role = \"label\";\nVictoryLabel.defaultStyles = defaultStyles;\nVictoryLabel.propTypes = {\n  active: PropTypes.bool,\n  angle: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  capHeight: PropTypes.oneOfType([PropTypes.string, CustomPropTypes.nonNegative, PropTypes.func]),\n  className: PropTypes.string,\n  data: PropTypes.array,\n  datum: PropTypes.any,\n  desc: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  direction: PropTypes.oneOf([\"rtl\", \"ltr\", \"inherit\"]),\n  dx: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),\n  dy: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]),\n  events: PropTypes.object,\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  index: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  inline: PropTypes.bool,\n  labelPlacement: PropTypes.oneOf([\"parallel\", \"perpendicular\", \"vertical\"]),\n  lineHeight: PropTypes.oneOfType([PropTypes.string, CustomPropTypes.nonNegative, PropTypes.func, PropTypes.array]),\n  origin: PropTypes.shape({\n    x: CustomPropTypes.nonNegative,\n    y: CustomPropTypes.nonNegative\n  }),\n  polar: PropTypes.bool,\n  renderInPortal: PropTypes.bool,\n  scale: PropTypes.shape({\n    x: CustomPropTypes.scale,\n    y: CustomPropTypes.scale\n  }),\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  text: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.func, PropTypes.array]),\n  textAnchor: PropTypes.oneOfType([PropTypes.oneOf([\"start\", \"middle\", \"end\", \"inherit\"]), PropTypes.func]),\n  textComponent: PropTypes.element,\n  title: PropTypes.string,\n  transform: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.func]),\n  tspanComponent: PropTypes.element,\n  verticalAnchor: PropTypes.oneOfType([PropTypes.oneOf([\"start\", \"middle\", \"end\"]), PropTypes.func]),\n  x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  y: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\nVictoryLabel.defaultProps = {\n  direction: \"inherit\",\n  textComponent: React.createElement(Text, null),\n  tspanComponent: React.createElement(TSpan, null),\n  capHeight: 0.71,\n  // Magic number from d3.\n  lineHeight: 1\n};\nexport default VictoryLabel;","map":null,"metadata":{},"sourceType":"module"}