{"ast":null,"code":"import _isPlainObject from \"lodash/isPlainObject\";\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/*eslint no-magic-numbers: [\"error\", { \"ignore\": [-1, 0, 1, 2] }]*/\n\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helpers, CommonProps, Path } from \"victory-core\";\n\nvar getVerticalPath = function (props) {\n  var pointerWidth = props.pointerWidth,\n      cornerRadius = props.cornerRadius,\n      orientation = props.orientation,\n      width = props.width,\n      height = props.height,\n      center = props.center;\n  var sign = orientation === \"bottom\" ? 1 : -1;\n  var x = props.x + (props.dx || 0);\n  var y = props.y + (props.dy || 0);\n  var centerX = _isPlainObject(center) && center.x;\n  var centerY = _isPlainObject(center) && center.y;\n  var pointerEdge = centerY + sign * (height / 2);\n  var oppositeEdge = centerY - sign * (height / 2);\n  var rightEdge = centerX + width / 2;\n  var leftEdge = centerX - width / 2;\n  var pointerLength = sign * (y - pointerEdge) < 0 ? 0 : props.pointerLength;\n  var direction = orientation === \"bottom\" ? \"0 0 0\" : \"0 0 1\";\n  var arc = \"\".concat(cornerRadius, \" \").concat(cornerRadius, \" \").concat(direction);\n  return \"M \".concat(centerX - pointerWidth / 2, \", \").concat(pointerEdge, \"\\n    L \").concat(pointerLength ? x : centerX + pointerWidth / 2, \", \").concat(pointerLength ? y : pointerEdge, \"\\n    L \").concat(centerX + pointerWidth / 2, \", \").concat(pointerEdge, \"\\n    L \").concat(rightEdge - cornerRadius, \", \").concat(pointerEdge, \"\\n    A \").concat(arc, \" \").concat(rightEdge, \", \").concat(pointerEdge - sign * cornerRadius, \"\\n    L \").concat(rightEdge, \", \").concat(oppositeEdge + sign * cornerRadius, \"\\n    A \").concat(arc, \" \").concat(rightEdge - cornerRadius, \", \").concat(oppositeEdge, \"\\n    L \").concat(leftEdge + cornerRadius, \", \").concat(oppositeEdge, \"\\n    A \").concat(arc, \" \").concat(leftEdge, \", \").concat(oppositeEdge + sign * cornerRadius, \"\\n    L \").concat(leftEdge, \", \").concat(pointerEdge - sign * cornerRadius, \"\\n    A \").concat(arc, \" \").concat(leftEdge + cornerRadius, \", \").concat(pointerEdge, \"\\n    z\");\n};\n\nvar getHorizontalPath = function (props) {\n  var pointerWidth = props.pointerWidth,\n      cornerRadius = props.cornerRadius,\n      orientation = props.orientation,\n      width = props.width,\n      height = props.height,\n      center = props.center;\n  var sign = orientation === \"left\" ? 1 : -1;\n  var x = props.x + (props.dx || 0);\n  var y = props.y + (props.dy || 0);\n  var centerX = _isPlainObject(center) && center.x;\n  var centerY = _isPlainObject(center) && center.y;\n  var pointerEdge = centerX - sign * (width / 2);\n  var oppositeEdge = centerX + sign * (width / 2);\n  var bottomEdge = centerY + height / 2;\n  var topEdge = centerY - height / 2;\n  var pointerLength = sign * (x - pointerEdge) > 0 ? 0 : props.pointerLength;\n  var direction = orientation === \"left\" ? \"0 0 0\" : \"0 0 1\";\n  var arc = \"\".concat(cornerRadius, \" \").concat(cornerRadius, \" \").concat(direction);\n  return \"M \".concat(pointerEdge, \", \").concat(centerY - pointerWidth / 2, \"\\n    L \").concat(pointerLength ? x : pointerEdge, \", \").concat(pointerLength ? y : centerY + pointerWidth / 2, \"\\n    L \").concat(pointerEdge, \", \").concat(centerY + pointerWidth / 2, \"\\n    L \").concat(pointerEdge, \", \").concat(bottomEdge - cornerRadius, \"\\n    A \").concat(arc, \" \").concat(pointerEdge + sign * cornerRadius, \", \").concat(bottomEdge, \"\\n    L \").concat(oppositeEdge - sign * cornerRadius, \", \").concat(bottomEdge, \"\\n    A \").concat(arc, \" \").concat(oppositeEdge, \", \").concat(bottomEdge - cornerRadius, \"\\n    L \").concat(oppositeEdge, \", \").concat(topEdge + cornerRadius, \"\\n    A \").concat(arc, \" \").concat(oppositeEdge - sign * cornerRadius, \", \").concat(topEdge, \"\\n    L \").concat(pointerEdge + sign * cornerRadius, \", \").concat(topEdge, \"\\n    A \").concat(arc, \" \").concat(pointerEdge, \", \").concat(topEdge + cornerRadius, \"\\n    z\");\n};\n\nvar getFlyoutPath = function (props) {\n  var orientation = props.orientation || \"top\";\n  return orientation === \"left\" || orientation === \"right\" ? getHorizontalPath(props) : getVerticalPath(props);\n};\n\nvar Flyout = function (props) {\n  return React.cloneElement(props.pathComponent, _objectSpread({}, props.events, {\n    style: Helpers.evaluateStyle(props.style, props),\n    d: getFlyoutPath(props),\n    className: props.className,\n    shapeRendering: props.shapeRendering,\n    role: props.role,\n    transform: props.transform,\n    clipPath: props.clipPath\n  }));\n};\n\nFlyout.propTypes = _objectSpread({}, CommonProps.primitiveProps, {\n  center: PropTypes.shape({\n    x: PropTypes.number,\n    y: PropTypes.number\n  }),\n  cornerRadius: PropTypes.number,\n  datum: PropTypes.object,\n  dx: PropTypes.number,\n  dy: PropTypes.number,\n  height: PropTypes.number,\n  orientation: PropTypes.oneOf([\"top\", \"bottom\", \"left\", \"right\"]),\n  pathComponent: PropTypes.element,\n  pointerLength: PropTypes.number,\n  pointerWidth: PropTypes.number,\n  width: PropTypes.number,\n  x: PropTypes.number,\n  y: PropTypes.number\n});\nFlyout.defaultProps = {\n  pathComponent: React.createElement(Path, null),\n  role: \"presentation\",\n  shapeRendering: \"auto\"\n};\nexport default Flyout;","map":null,"metadata":{},"sourceType":"module"}