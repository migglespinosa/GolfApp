{"ast":null,"code":"var _jsxFileName = \"/Users/developer/Desktop/Software_Projects/GolfApp/my-app/client/src/Main/Friends/FriendRequests.js\";\nimport React from 'react';\nimport data from '../../golfers';\nimport '../../App.css';\nimport { connect } from 'react-redux';\nimport { searchUser, addRequests } from '../../Redux/actions/authActions';\n\nclass FriendRequests extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      NameExists: null,\n      RequestSent: false,\n      Username: ''\n    };\n    this.search = this.search.bind(this);\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.setNameExists = this.setNameExists.bind(this);\n    this.sendRequest = this.sendRequest.bind(this);\n  }\n\n  handleUsernameChange(event) {\n    this.setState({\n      Username: event.target.value\n    });\n  }\n\n  setNameExists(status) {\n    console.log(\"setNameExists status: \", status);\n    this.setState({\n      NameExists: status\n    });\n  } //Searches golfers.json to see whether the name entered into the searchBar exists.\n\n\n  search(event) {\n    this.props.searchUser(this.state.Username).then(res => {\n      const taken = this.props.golfer.friends.some(friend => {\n        return friend.username == this.state.Username;\n      });\n\n      if (taken) {\n        this.setState({\n          NameExists: \"AlreadyFriends\"\n        });\n      } else if (this.state.Username == this.props.golfer.username) {\n        this.setState({\n          NameExists: \"Yourself\"\n        });\n      } else {\n        this.setState({\n          NameExists: res.exists,\n          RequestSent: false\n        });\n      }\n    });\n    event.preventDefault();\n  }\n\n  sendRequest() {\n    const requestObject = {\n      username: this.state.Username\n    };\n    this.props.addRequests(requestObject);\n    this.setState({\n      RequestSent: true\n    });\n  }\n\n  render() {\n    let existsMessage;\n\n    if (this.state.NameExists == null) {\n      existsMessage = null;\n    } else if (this.state.NameExists == true) {\n      existsMessage = React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Add the user!\");\n    } else if (this.state.NameExists == \"Yourself\") {\n      existsMessage = React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"You can't add youself\");\n    } else if (this.state.NameExists == \"AlreadyFriends\") {\n      existsMessage = React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"You're already friends\");\n    } else if (this.state.NameExists == true && this.state.NameExists == true) {\n      existsMessage = React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Add the user!\");\n    } else {\n      existsMessage = React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Username does not exist\");\n    }\n\n    let sendRequest;\n\n    if (this.state.NameExists == true && this.state.RequestSent == false) {\n      sendRequest = React.createElement(\"button\", {\n        type: \"button\",\n        id: \"sendRequest\",\n        onClick: () => this.sendRequest(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Send \", this.state.Username, \" a friend request\");\n    } else {\n      sendRequest = null;\n    }\n\n    const searchForm = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Enter a Username :\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"SearchUsername\",\n      value: this.state.value,\n      onChange: this.handleUsernameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Search a golfer:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), existsMessage, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), searchForm, sendRequest);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  searchUser,\n  addRequests\n})(FriendRequests);","map":{"version":3,"sources":["/Users/developer/Desktop/Software_Projects/GolfApp/my-app/client/src/Main/Friends/FriendRequests.js"],"names":["React","data","connect","searchUser","addRequests","FriendRequests","Component","constructor","props","state","NameExists","RequestSent","Username","search","bind","handleUsernameChange","setNameExists","sendRequest","event","setState","target","value","status","console","log","then","res","taken","golfer","friends","some","friend","username","exists","preventDefault","requestObject","render","existsMessage","searchForm","mapStateToProps","auth","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport data from '../../golfers';\nimport '../../App.css';\nimport { connect } from 'react-redux';\nimport { searchUser, addRequests } from '../../Redux/actions/authActions';\n\n\nclass FriendRequests extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      NameExists: null,\n      RequestSent: false,\n      Username: ''\n    }\n    this.search = this.search.bind(this);\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.setNameExists = this.setNameExists.bind(this);\n    this.sendRequest = this.sendRequest.bind(this);\n  }\n\n  handleUsernameChange(event){\n    this.setState({Username: event.target.value});\n  }\n\n\n  setNameExists(status){\n    console.log(\"setNameExists status: \", status);\n    this.setState({NameExists: status})\n  }\n\n\n  //Searches golfers.json to see whether the name entered into the searchBar exists.\n  search(event){\n\n    this.props.searchUser(this.state.Username).then(res => {\n\n      const taken = this.props.golfer.friends.some(friend => {\n        return friend.username == this.state.Username\n      })\n      if(taken){\n        this.setState({\n          NameExists: \"AlreadyFriends\"\n        })\n      }\n      else if(this.state.Username == this.props.golfer.username){\n        this.setState({\n          NameExists: \"Yourself\"\n        })\n      }\n      else{\n        this.setState({\n          NameExists: res.exists,\n          RequestSent: false\n        })\n      }\n    })\n\n    event.preventDefault();\n\n  }\n\n  sendRequest(){\n    const requestObject = {\n      username: this.state.Username,\n    }\n    this.props.addRequests(requestObject);\n    this.setState({\n      RequestSent: true\n    })\n  }\n\n  render(){\n\n    let existsMessage;\n    if(this.state.NameExists == null){\n      existsMessage = null\n    }\n    else if(this.state.NameExists == true){\n      existsMessage = <h4>Add the user!</h4>\n    }\n    else if(this.state.NameExists == \"Yourself\"){\n      existsMessage = <h4>You can't add youself</h4>\n    }\n    else if(this.state.NameExists == \"AlreadyFriends\"){\n      existsMessage = <h4>You're already friends</h4>\n    }\n    else if(this.state.NameExists == true && this.state.NameExists == true){\n      existsMessage = <h4>Add the user!</h4>\n    }\n    else{\n      existsMessage = <h4>Username does not exist</h4>\n    }\n\n    let sendRequest;\n    if(this.state.NameExists == true && this.state.RequestSent == false){\n      sendRequest = <button type=\"button\" id=\"sendRequest\" onClick={() => this.sendRequest()}>\n      Send {this.state.Username} a friend request</button>\n    }\n    else{\n      sendRequest = null;\n    }\n\n    const searchForm = (\n      <div>\n        <form onSubmit={this.search}>\n          <label>\n            Enter a Username :\n          </label>\n          <input type=\"text\" id=\"SearchUsername\"\n                 value={this.state.value}\n                 onChange={this.handleUsernameChange}/>\n          <br />\n          <input type=\"submit\" value=\"Search\"/>\n        </form>\n      </div>\n    )\n\n\n    return(\n      <div>\n        <h3>Search a golfer:</h3><br />\n        {existsMessage} <br />\n        {searchForm}\n        {sendRequest}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { searchUser, addRequests }\n)(FriendRequests);\n"]},"metadata":{},"sourceType":"module"}