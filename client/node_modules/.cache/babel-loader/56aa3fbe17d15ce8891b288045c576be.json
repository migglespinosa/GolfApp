{"ast":null,"code":"import _orderBy from \"lodash/orderBy\";\nimport _isPlainObject from \"lodash/isPlainObject\";\nimport _uniqueId from \"lodash/uniqueId\";\nimport _defaults from \"lodash/defaults\";\nimport _assign from \"lodash/assign\";\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { PropTypes as CustomPropTypes, TextSize, Helpers, LabelHelpers, VictoryLabel, VictoryTheme, VictoryPortal } from \"victory-core\";\nimport Flyout from \"./flyout\";\nvar fallbackProps = {\n  cornerRadius: 5,\n  pointerLength: 10,\n  pointerWidth: 10\n};\n\nvar VictoryTooltip =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VictoryTooltip, _React$Component);\n\n  function VictoryTooltip(props) {\n    var _this;\n\n    _classCallCheck(this, VictoryTooltip);\n\n    _this = _possibleConstructorReturn(this, (VictoryTooltip.__proto__ || Object.getPrototypeOf(VictoryTooltip)).call(this, props));\n    _this.id = props.id === undefined ? _uniqueId(\"tooltip-\") : props.id;\n    return _this;\n  }\n\n  _createClass(VictoryTooltip, [{\n    key: \"getDefaultOrientation\",\n    value: function getDefaultOrientation(props) {\n      var datum = props.datum,\n          horizontal = props.horizontal,\n          polar = props.polar;\n\n      if (!polar) {\n        var positive = horizontal ? \"right\" : \"top\";\n        var negative = horizontal ? \"left\" : \"bottom\";\n        return datum && datum.y < 0 ? negative : positive;\n      } else {\n        return this.getPolarOrientation(props, datum);\n      }\n    }\n  }, {\n    key: \"getPolarOrientation\",\n    value: function getPolarOrientation(props, datum) {\n      var degrees = LabelHelpers.getDegrees(props, datum);\n      var placement = props.labelPlacement || \"vertical\";\n\n      if (placement === \" vertical\") {\n        return this.getVerticalOrientations(degrees);\n      } else if (placement === \"parallel\") {\n        return degrees < 90 || degrees > 270 ? \"right\" : \"left\";\n      } else {\n        return degrees > 180 ? \"bottom\" : \"top\";\n      }\n    }\n  }, {\n    key: \"getVerticalOrientations\",\n    value: function getVerticalOrientations(degrees) {\n      // eslint-disable-next-line no-magic-numbers\n      if (degrees < 45 || degrees > 315) {\n        return \"right\"; // eslint-disable-next-line no-magic-numbers\n      } else if (degrees >= 45 && degrees <= 135) {\n        return \"top\"; // eslint-disable-next-line no-magic-numbers\n      } else if (degrees > 135 && degrees < 225) {\n        return \"left\";\n      } else {\n        return \"bottom\";\n      }\n    }\n  }, {\n    key: \"getStyles\",\n    value: function getStyles(props) {\n      var theme = props.theme || VictoryTheme.grayscale;\n      var defaultLabelStyles = theme && theme.tooltip && theme.tooltip.style ? theme.tooltip.style : {};\n      var baseLabelStyle = Array.isArray(props.style) ? props.style.map(function (s) {\n        return _defaults({}, s, defaultLabelStyles);\n      }) : _defaults({}, props.style, defaultLabelStyles);\n      var defaultFlyoutStyles = theme && theme.tooltip && theme.tooltip.flyoutStyle ? theme.tooltip.flyoutStyle : {};\n      var baseFlyoutStyle = props.flyoutStyle ? _defaults({}, props.flyoutStyle, defaultFlyoutStyles) : defaultFlyoutStyles;\n      var style = Array.isArray(baseLabelStyle) ? baseLabelStyle.map(function (s) {\n        return Helpers.evaluateStyle(s, props);\n      }) : Helpers.evaluateStyle(baseLabelStyle, props);\n      var flyoutStyle = Helpers.evaluateStyle(baseFlyoutStyle, _assign({}, props, {\n        style: style\n      }));\n      return {\n        style: style,\n        flyoutStyle: flyoutStyle\n      };\n    }\n  }, {\n    key: \"getEvaluatedProps\",\n    value: function getEvaluatedProps(props) {\n      var horizontal = props.horizontal,\n          pointerLength = props.pointerLength,\n          pointerWidth = props.pointerWidth,\n          cornerRadius = props.cornerRadius,\n          centerOffset = props.centerOffset,\n          dx = props.dx,\n          dy = props.dy;\n      var active = Helpers.evaluateProp(props.active, props);\n      var text = Helpers.evaluateProp(props.text, _assign({}, props, {\n        active: active\n      }));\n\n      var _getStyles = this.getStyles(_assign({}, props, {\n        active: active,\n        text: text\n      })),\n          style = _getStyles.style,\n          flyoutStyle = _getStyles.flyoutStyle;\n\n      var orientation = Helpers.evaluateProp(props.orientation, _assign({}, props, {\n        active: active,\n        text: text,\n        style: style,\n        flyoutStyle: flyoutStyle\n      })) || this.getDefaultOrientation(props);\n      var labelSize = TextSize.approximateTextSize(text, style);\n\n      var _getDimensions = this.getDimensions(_assign({}, props, {\n        style: style,\n        flyoutStyle: flyoutStyle,\n        active: active,\n        text: text,\n        orientation: orientation\n      }), labelSize),\n          flyoutHeight = _getDimensions.flyoutHeight,\n          flyoutWidth = _getDimensions.flyoutWidth;\n\n      var evaluatedProps = _assign({}, props, {\n        active: active,\n        text: text,\n        style: style,\n        flyoutStyle: flyoutStyle,\n        orientation: orientation,\n        flyoutHeight: flyoutHeight,\n        flyoutWidth: flyoutWidth\n      });\n\n      var offsetX = _isPlainObject(centerOffset) && centerOffset.x !== undefined ? Helpers.evaluateProp(centerOffset.x, evaluatedProps) : 0;\n      var offsetY = _isPlainObject(centerOffset) && centerOffset.y !== undefined ? Helpers.evaluateProp(centerOffset.y, evaluatedProps) : 0;\n      var padding = flyoutStyle && flyoutStyle.padding || 0;\n      var defaultDx = horizontal ? padding : 0;\n      var defaultDy = horizontal ? 0 : padding;\n      return _assign({}, props, {\n        active: active,\n        text: text,\n        style: style,\n        flyoutStyle: flyoutStyle,\n        orientation: orientation,\n        flyoutHeight: flyoutHeight,\n        flyoutWidth: flyoutWidth,\n        centerOffset: {\n          x: offsetX,\n          y: offsetY\n        },\n        dx: dx !== undefined ? Helpers.evaluateProp(dx, evaluatedProps) : defaultDx,\n        dy: dy !== undefined ? Helpers.evaluateProp(dy, evaluatedProps) : defaultDy,\n        cornerRadius: Helpers.evaluateProp(cornerRadius, evaluatedProps),\n        pointerLength: Helpers.evaluateProp(pointerLength, evaluatedProps),\n        pointerWidth: Helpers.evaluateProp(pointerWidth, evaluatedProps)\n      });\n    }\n  }, {\n    key: \"getCalculatedValues\",\n    value: function getCalculatedValues(props) {\n      var style = props.style,\n          text = props.text,\n          flyoutStyle = props.flyoutStyle,\n          flyoutHeight = props.flyoutHeight,\n          flyoutWidth = props.flyoutWidth;\n      var labelSize = TextSize.approximateTextSize(text, style);\n      var flyoutDimensions = {\n        height: flyoutHeight,\n        width: flyoutWidth\n      };\n      var flyoutCenter = this.getFlyoutCenter(props, flyoutDimensions);\n      var transform = this.getTransform(props);\n      return {\n        style: style,\n        flyoutStyle: flyoutStyle,\n        labelSize: labelSize,\n        flyoutDimensions: flyoutDimensions,\n        flyoutCenter: flyoutCenter,\n        transform: transform\n      };\n    }\n  }, {\n    key: \"getTransform\",\n    value: function getTransform(props) {\n      var x = props.x,\n          y = props.y,\n          style = props.style;\n      var labelStyle = style || {};\n      var angle = labelStyle.angle || props.angle || this.getDefaultAngle(props);\n      return angle ? \"rotate(\".concat(angle, \" \").concat(x, \" \").concat(y, \")\") : undefined;\n    } // eslint-disable-next-line complexity\n\n  }, {\n    key: \"getDefaultAngle\",\n    value: function getDefaultAngle(props) {\n      var polar = props.polar,\n          labelPlacement = props.labelPlacement,\n          orientation = props.orientation,\n          datum = props.datum;\n\n      if (!polar || !labelPlacement || labelPlacement === \"vertical\") {\n        return 0;\n      }\n\n      var degrees = LabelHelpers.getDegrees(props, datum);\n      var sign = degrees > 90 && degrees < 180 || degrees > 270 ? 1 : -1;\n      var labelRotation = labelPlacement === \"perpendicular\" ? 0 : 90;\n      var angle;\n\n      if (degrees === 0 || degrees === 180) {\n        angle = orientation === \"top\" && degrees === 180 ? 270 : 90;\n      } else if (degrees > 0 && degrees < 180) {\n        angle = 90 - degrees;\n      } else if (degrees > 180 && degrees < 360) {\n        angle = 270 - degrees;\n      }\n\n      return angle + sign * labelRotation;\n    }\n  }, {\n    key: \"constrainTooltip\",\n    value: function constrainTooltip(center, props, dimensions) {\n      var x = center.x,\n          y = center.y;\n      var width = dimensions.width,\n          height = dimensions.height;\n      var extent = {\n        x: [0, props.width],\n        y: [0, props.height]\n      };\n      var flyoutExtent = {\n        x: [x - width / 2, x + width / 2],\n        y: [y - height / 2, y + height / 2]\n      };\n      var adjustments = {\n        x: [flyoutExtent.x[0] < extent.x[0] ? extent.x[0] - flyoutExtent.x[0] : 0, flyoutExtent.x[1] > extent.x[1] ? flyoutExtent.x[1] - extent.x[1] : 0],\n        y: [flyoutExtent.y[0] < extent.y[0] ? extent.y[0] - flyoutExtent.y[0] : 0, flyoutExtent.y[1] > extent.y[1] ? flyoutExtent.y[1] - extent.y[1] : 0]\n      };\n      return {\n        x: Math.round(x + adjustments.x[0] - adjustments.x[1]),\n        y: Math.round(y + adjustments.y[0] - adjustments.y[1])\n      };\n    } // eslint-disable-next-line complexity\n\n  }, {\n    key: \"getFlyoutCenter\",\n    value: function getFlyoutCenter(props, dimensions) {\n      var x = props.x,\n          y = props.y,\n          dx = props.dx,\n          dy = props.dy,\n          pointerLength = props.pointerLength,\n          orientation = props.orientation,\n          constrainToVisibleArea = props.constrainToVisibleArea,\n          centerOffset = props.centerOffset;\n      var height = dimensions.height,\n          width = dimensions.width;\n      var xSign = orientation === \"left\" ? -1 : 1;\n      var ySign = orientation === \"bottom\" ? -1 : 1;\n      var flyoutCenter = {\n        x: orientation === \"left\" || orientation === \"right\" ? x + xSign * (pointerLength + width / 2 + xSign * dx) : x + dx,\n        y: orientation === \"top\" || orientation === \"bottom\" ? y - ySign * (pointerLength + height / 2 - ySign * dy) : y + dy\n      };\n      var center = {\n        x: _isPlainObject(props.center) && props.center.x !== undefined ? props.center.x : flyoutCenter.x,\n        y: _isPlainObject(props.center) && props.center.y !== undefined ? props.center.y : flyoutCenter.y\n      };\n      var centerWithOffset = {\n        x: center.x + centerOffset.x,\n        y: center.y + centerOffset.y\n      };\n      return constrainToVisibleArea ? this.constrainTooltip(centerWithOffset, props, dimensions) : centerWithOffset;\n    }\n  }, {\n    key: \"getLabelPadding\",\n    value: function getLabelPadding(style) {\n      if (!style) {\n        return 0;\n      }\n\n      var paddings = Array.isArray(style) ? style.map(function (s) {\n        return s.padding;\n      }) : [style.padding];\n      return Math.max.apply(Math, _toConsumableArray(paddings).concat([0]));\n    }\n  }, {\n    key: \"getDimensions\",\n    value: function getDimensions(props, labelSize) {\n      var orientation = props.orientation,\n          pointerLength = props.pointerLength,\n          pointerWidth = props.pointerWidth,\n          style = props.style,\n          flyoutHeight = props.flyoutHeight,\n          flyoutWidth = props.flyoutWidth;\n      var padding = this.getLabelPadding(style);\n      var cornerRadius = Helpers.evaluateProp(props.cornerRadius, props);\n\n      var getHeight = function () {\n        var calculatedHeight = labelSize.height + padding;\n        var minHeight = orientation === \"top\" || orientation === \"bottom\" ? 2 * cornerRadius : 2 * cornerRadius + pointerWidth;\n        return Math.max(minHeight, calculatedHeight);\n      };\n\n      var getWidth = function () {\n        var calculatedWidth = labelSize.width + padding;\n        var minWidth = orientation === \"left\" || orientation === \"right\" ? 2 * cornerRadius + pointerLength : 2 * cornerRadius;\n        return Math.max(minWidth, calculatedWidth);\n      };\n\n      return {\n        flyoutHeight: flyoutHeight ? Helpers.evaluateProp(flyoutHeight, props) : getHeight(props, labelSize, orientation) + padding / 2,\n        flyoutWidth: flyoutWidth ? Helpers.evaluateProp(flyoutWidth, props) : getWidth(props, labelSize, orientation) + padding\n      };\n    }\n  }, {\n    key: \"getLabelProps\",\n    value: function getLabelProps(props, calculatedValues) {\n      var flyoutCenter = calculatedValues.flyoutCenter,\n          style = calculatedValues.style,\n          labelSize = calculatedValues.labelSize,\n          dy = calculatedValues.dy,\n          dx = calculatedValues.dx;\n      var text = props.text,\n          datum = props.datum,\n          labelComponent = props.labelComponent,\n          index = props.index;\n      var textAnchor = (Array.isArray(style) && style.length ? style[0].textAnchor : style.textAnchor) || \"middle\";\n\n      var getLabelX = function () {\n        var sign = textAnchor === \"end\" ? -1 : 1;\n        return flyoutCenter.x - sign * (labelSize.width / 2);\n      };\n\n      return _defaults({}, labelComponent.props, {\n        key: \"\".concat(this.id, \"-label-\").concat(index),\n        text: text,\n        datum: datum,\n        textAnchor: textAnchor,\n        dy: dy,\n        dx: dx,\n        style: style,\n        x: !textAnchor || textAnchor === \"middle\" ? flyoutCenter.x : getLabelX(),\n        y: flyoutCenter.y,\n        verticalAnchor: \"middle\",\n        angle: style.angle\n      });\n    }\n  }, {\n    key: \"getPointerOrientation\",\n    value: function getPointerOrientation(point, center, flyoutDimensions) {\n      var edges = {\n        bottom: center.y + flyoutDimensions.height / 2,\n        top: center.y - flyoutDimensions.height / 2,\n        left: center.x - flyoutDimensions.width / 2,\n        right: center.x + flyoutDimensions.width / 2\n      };\n      var gaps = [{\n        side: \"top\",\n        val: edges.top > point.y ? edges.top - point.y : -1\n      }, {\n        side: \"bottom\",\n        val: edges.bottom < point.y ? point.y - edges.bottom : -1\n      }, {\n        side: \"right\",\n        val: edges.right < point.x ? point.x - edges.right : -1\n      }, {\n        side: \"left\",\n        val: edges.left > point.x ? edges.left - point.x : -1\n      }];\n      return _orderBy(gaps, \"val\", \"desc\")[0].side;\n    }\n  }, {\n    key: \"getFlyoutProps\",\n    value: function getFlyoutProps(props, calculatedValues) {\n      var flyoutDimensions = calculatedValues.flyoutDimensions,\n          flyoutStyle = calculatedValues.flyoutStyle,\n          flyoutCenter = calculatedValues.flyoutCenter;\n      var x = props.x,\n          y = props.y,\n          dx = props.dx,\n          dy = props.dy,\n          datum = props.datum,\n          index = props.index,\n          pointerLength = props.pointerLength,\n          pointerWidth = props.pointerWidth,\n          cornerRadius = props.cornerRadius,\n          events = props.events,\n          flyoutComponent = props.flyoutComponent;\n      var pointerOrientation = Helpers.evaluateProp(props.pointerOrientation, props);\n      return _defaults({}, flyoutComponent.props, {\n        x: x,\n        y: y,\n        dx: dx,\n        dy: dy,\n        datum: datum,\n        index: index,\n        pointerLength: pointerLength,\n        pointerWidth: pointerWidth,\n        cornerRadius: cornerRadius,\n        events: events,\n        orientation: pointerOrientation || this.getPointerOrientation({\n          x: x,\n          y: y\n        }, flyoutCenter, flyoutDimensions),\n        key: \"\".concat(this.id, \"-tooltip-\").concat(index),\n        width: flyoutDimensions.width,\n        height: flyoutDimensions.height,\n        style: flyoutStyle,\n        center: flyoutCenter\n      });\n    } // Overridden in victory-core-native\n\n  }, {\n    key: \"renderTooltip\",\n    value: function renderTooltip(props) {\n      var evaluatedProps = this.getEvaluatedProps(props);\n      var flyoutComponent = evaluatedProps.flyoutComponent,\n          labelComponent = evaluatedProps.labelComponent,\n          groupComponent = evaluatedProps.groupComponent,\n          active = evaluatedProps.active,\n          renderInPortal = evaluatedProps.renderInPortal;\n\n      if (!active) {\n        return renderInPortal ? React.createElement(VictoryPortal, null, null) : null;\n      }\n\n      var calculatedValues = this.getCalculatedValues(evaluatedProps);\n      var children = [React.cloneElement(flyoutComponent, this.getFlyoutProps(evaluatedProps, calculatedValues)), React.cloneElement(labelComponent, this.getLabelProps(evaluatedProps, calculatedValues))];\n      var tooltip = React.cloneElement(groupComponent, {\n        role: \"presentation\",\n        transform: calculatedValues.transform\n      }, children);\n      return renderInPortal ? React.createElement(VictoryPortal, null, tooltip) : tooltip;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = Helpers.modifyProps(this.props, fallbackProps, \"tooltip\");\n      return this.renderTooltip(props);\n    }\n  }]);\n\n  return VictoryTooltip;\n}(React.Component);\n\nObject.defineProperty(VictoryTooltip, \"displayName\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: \"VictoryTooltip\"\n});\nObject.defineProperty(VictoryTooltip, \"propTypes\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: {\n    activateData: PropTypes.bool,\n    active: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    angle: PropTypes.number,\n    center: PropTypes.shape({\n      x: CustomPropTypes.nonNegative,\n      y: CustomPropTypes.nonNegative\n    }),\n    centerOffset: PropTypes.shape({\n      x: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n      y: PropTypes.oneOfType([PropTypes.number, PropTypes.func])\n    }),\n    constrainToVisibleArea: PropTypes.bool,\n    cornerRadius: PropTypes.oneOfType([CustomPropTypes.nonNegative, PropTypes.func]),\n    data: PropTypes.array,\n    datum: PropTypes.object,\n    dx: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n    dy: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n    events: PropTypes.object,\n    flyoutComponent: PropTypes.element,\n    flyoutHeight: PropTypes.oneOfType([CustomPropTypes.nonNegative, PropTypes.func]),\n    flyoutStyle: PropTypes.object,\n    flyoutWidth: PropTypes.oneOfType([CustomPropTypes.nonNegative, PropTypes.func]),\n    groupComponent: PropTypes.element,\n    height: PropTypes.number,\n    horizontal: PropTypes.bool,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    index: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    labelComponent: PropTypes.element,\n    orientation: PropTypes.oneOfType([PropTypes.oneOf([\"top\", \"bottom\", \"left\", \"right\"]), PropTypes.func]),\n    pointerLength: PropTypes.oneOfType([CustomPropTypes.nonNegative, PropTypes.func]),\n    pointerOrientation: PropTypes.oneOfType([PropTypes.oneOf([\"top\", \"bottom\", \"left\", \"right\"]), PropTypes.func]),\n    pointerWidth: PropTypes.oneOfType([CustomPropTypes.nonNegative, PropTypes.func]),\n    polar: PropTypes.bool,\n    renderInPortal: PropTypes.bool,\n    scale: PropTypes.shape({\n      x: CustomPropTypes.scale,\n      y: CustomPropTypes.scale\n    }),\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    text: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.func, PropTypes.array]),\n    theme: PropTypes.object,\n    width: PropTypes.number,\n    x: PropTypes.number,\n    y: PropTypes.number\n  }\n});\nObject.defineProperty(VictoryTooltip, \"defaultProps\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: {\n    active: false,\n    renderInPortal: true,\n    labelComponent: React.createElement(VictoryLabel, null),\n    flyoutComponent: React.createElement(Flyout, null),\n    groupComponent: React.createElement(\"g\", null)\n  }\n});\nObject.defineProperty(VictoryTooltip, \"defaultEvents\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: function (props) {\n    return [{\n      target: \"data\",\n      eventHandlers: {\n        onMouseOver: function () {\n          return props.activateData ? [{\n            target: \"labels\",\n            mutation: function () {\n              return {\n                active: true\n              };\n            }\n          }, {\n            target: \"data\",\n            mutation: function () {\n              return {\n                active: true\n              };\n            }\n          }] : [{\n            target: \"labels\",\n            mutation: function () {\n              return {\n                active: true\n              };\n            }\n          }];\n        },\n        onTouchStart: function () {\n          return props.activateData ? [{\n            target: \"labels\",\n            mutation: function () {\n              return {\n                active: true\n              };\n            }\n          }, {\n            target: \"data\",\n            mutation: function () {\n              return {\n                active: true\n              };\n            }\n          }] : [{\n            target: \"labels\",\n            mutation: function () {\n              return {\n                active: true\n              };\n            }\n          }];\n        },\n        onMouseOut: function () {\n          return props.activateData ? [{\n            target: \"labels\",\n            mutation: function () {\n              return {\n                active: undefined\n              };\n            }\n          }, {\n            target: \"data\",\n            mutation: function () {\n              return {\n                active: undefined\n              };\n            }\n          }] : [{\n            target: \"labels\",\n            mutation: function () {\n              return {\n                active: undefined\n              };\n            }\n          }];\n        },\n        onTouchEnd: function () {\n          return props.activateData ? [{\n            target: \"labels\",\n            mutation: function () {\n              return {\n                active: undefined\n              };\n            }\n          }, {\n            target: \"data\",\n            mutation: function () {\n              return {\n                active: undefined\n              };\n            }\n          }] : [{\n            target: \"labels\",\n            mutation: function () {\n              return {\n                active: undefined\n              };\n            }\n          }];\n        }\n      }\n    }];\n  }\n});\nexport { VictoryTooltip as default };","map":null,"metadata":{},"sourceType":"module"}