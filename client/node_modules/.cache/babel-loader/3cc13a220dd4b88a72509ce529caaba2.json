{"ast":null,"code":"import _isRegExp from \"lodash/isRegExp\";\nimport _isString from \"lodash/isString\";\nimport _includes from \"lodash/includes\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _isFunction from \"lodash/isFunction\";\nimport _throttle from \"lodash/throttle\";\nimport _assign from \"lodash/assign\";\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nimport { Selection, Data, Helpers } from \"victory-core\";\nimport isEqual from \"react-fast-compare\";\nimport Delaunay from \"delaunay-find/lib/index.js\";\nimport React from \"react\";\nvar VoronoiHelpers = {\n  withinBounds: function (props, point) {\n    var width = props.width,\n        height = props.height,\n        voronoiPadding = props.voronoiPadding,\n        polar = props.polar,\n        origin = props.origin,\n        scale = props.scale;\n    var padding = voronoiPadding || 0;\n    var x = point.x,\n        y = point.y;\n\n    if (polar) {\n      var distanceSquared = Math.pow(x - origin.x, 2) + Math.pow(y - origin.y, 2);\n      var radius = Math.max.apply(Math, _toConsumableArray(scale.y.range()));\n      return distanceSquared < Math.pow(radius, 2);\n    } else {\n      return x >= padding && x <= width - padding && y >= padding && y <= height - padding;\n    }\n  },\n  getDatasets: function (props) {\n    var children = React.Children.toArray(props.children);\n\n    var addMeta = function (data, name, child) {\n      var continuous = child && child.type && child.type.continuous;\n      var style = child ? child.props && child.props.style : props.style;\n      return data.map(function (datum, index) {\n        var _Helpers$getPoint = Helpers.getPoint(datum),\n            x = _Helpers$getPoint.x,\n            y = _Helpers$getPoint.y,\n            y0 = _Helpers$getPoint.y0,\n            x0 = _Helpers$getPoint.x0;\n\n        var voronoiX = (+x + +x0) / 2;\n        var voronoiY = (+y + +y0) / 2;\n        return _assign({\n          _voronoiX: props.voronoiDimension === \"y\" ? 0 : voronoiX,\n          _voronoiY: props.voronoiDimension === \"x\" ? 0 : voronoiY,\n          eventKey: index,\n          childName: name,\n          continuous: continuous,\n          style: style\n        }, datum);\n      });\n    };\n\n    if (props.data) {\n      return addMeta(props.data);\n    }\n\n    var getData = function (childProps) {\n      var data = Data.getData(childProps);\n      return Array.isArray(data) && data.length > 0 ? data : undefined;\n    };\n\n    var iteratee = function (child, childName) {\n      var childProps = child.props || {};\n      var name = childProps.name || childName;\n      var blacklist = props.voronoiBlacklist || [];\n      var blacklistStr = blacklist.filter(_isString);\n      var blacklistRegExp = blacklist.filter(_isRegExp);\n      var isRegExpMatch = blacklistRegExp.some(function (regExp) {\n        return regExp.test(name);\n      });\n\n      if (!Data.isDataComponent(child) || _includes(blacklistStr, name) || isRegExpMatch) {\n        return null;\n      }\n\n      var getChildData = child.type && _isFunction(child.type.getData) ? child.type.getData : getData;\n      var childData = getChildData(child.props);\n      return childData ? addMeta(childData, name, child) : null;\n    };\n\n    return Helpers.reduceChildren(children, iteratee, props);\n  },\n  findPoints: function (datasets, point) {\n    return datasets.filter(function (d) {\n      return point._voronoiX === d._voronoiX && point._voronoiY === d._voronoiY;\n    });\n  },\n  withinRadius: function (point, mousePosition, radius) {\n    if (!radius) {\n      return true;\n    }\n\n    var x = mousePosition.x,\n        y = mousePosition.y;\n    var distanceSquared = Math.pow(x - point[0], 2) + Math.pow(y - point[1], 2);\n    return distanceSquared < Math.pow(radius, 2);\n  },\n  getVoronoiPoints: function (props, mousePosition) {\n    var datasets = this.getDatasets(props);\n    var scaledData = datasets.map(function (d) {\n      var _Helpers$scalePoint = Helpers.scalePoint(props, d),\n          x = _Helpers$scalePoint.x,\n          y = _Helpers$scalePoint.y;\n\n      return [x, y];\n    });\n    var delaunay = Delaunay.from(scaledData);\n    var index = delaunay.find(mousePosition.x, mousePosition.y);\n    var withinRadius = this.withinRadius(scaledData[index], mousePosition, props.radius);\n    var points = withinRadius ? this.findPoints(datasets, datasets[index]) : [];\n    return {\n      points: points,\n      index: index\n    };\n  },\n  getActiveMutations: function (props, point) {\n    var childName = point.childName,\n        continuous = point.continuous;\n    var activateData = props.activateData,\n        activateLabels = props.activateLabels,\n        labels = props.labels;\n\n    if (!activateData && !activateLabels) {\n      return [];\n    }\n\n    var defaultTarget = activateData ? [\"data\"] : [];\n    var targets = labels && !activateLabels ? defaultTarget : defaultTarget.concat(\"labels\");\n\n    if (_isEmpty(targets)) {\n      return [];\n    }\n\n    return targets.map(function (target) {\n      var eventKey = continuous === true && target === \"data\" ? \"all\" : point.eventKey;\n      return {\n        childName: childName,\n        eventKey: eventKey,\n        target: target,\n        mutation: function () {\n          return {\n            active: true\n          };\n        }\n      };\n    });\n  },\n  getInactiveMutations: function (props, point) {\n    var childName = point.childName,\n        continuous = point.continuous;\n    var activateData = props.activateData,\n        activateLabels = props.activateLabels,\n        labels = props.labels;\n\n    if (!activateData && !activateLabels) {\n      return [];\n    }\n\n    var defaultTarget = activateData ? [\"data\"] : [];\n    var targets = labels && !activateLabels ? defaultTarget : defaultTarget.concat(\"labels\");\n\n    if (_isEmpty(targets)) {\n      return [];\n    }\n\n    return targets.map(function (target) {\n      var eventKey = continuous && target === \"data\" ? \"all\" : point.eventKey;\n      return {\n        childName: childName,\n        eventKey: eventKey,\n        target: target,\n        mutation: function () {\n          return null;\n        }\n      };\n    });\n  },\n  // eslint-disable-next-line max-params\n  getParentMutation: function (activePoints, mousePosition, parentSVG, vIndex) {\n    return [{\n      target: \"parent\",\n      eventKey: \"parent\",\n      mutation: function () {\n        return {\n          activePoints: activePoints,\n          mousePosition: mousePosition,\n          parentSVG: parentSVG,\n          vIndex: vIndex\n        };\n      }\n    }];\n  },\n  onActivated: function (props, points) {\n    if (_isFunction(props.onActivated)) {\n      props.onActivated(points, props);\n    }\n  },\n  onDeactivated: function (props, points) {\n    if (_isFunction(props.onDeactivated)) {\n      props.onDeactivated(points, props);\n    }\n  },\n  onMouseLeave: function (evt, targetProps) {\n    var _this = this,\n        _getParentMutation;\n\n    var activePoints = targetProps.activePoints || [];\n    this.onDeactivated(targetProps, activePoints);\n    var inactiveMutations = activePoints.length ? activePoints.map(function (point) {\n      return _this.getInactiveMutations(targetProps, point);\n    }) : [];\n    return (_getParentMutation = this.getParentMutation([])).concat.apply(_getParentMutation, _toConsumableArray(inactiveMutations));\n  },\n  onMouseMove: function (evt, targetProps) {\n    var _this2 = this; // eslint-disable-line max-statements\n\n\n    var activePoints = targetProps.activePoints || [];\n    var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n    var mousePosition = Selection.getSVGEventCoordinates(evt, parentSVG);\n\n    if (!this.withinBounds(targetProps, mousePosition)) {\n      var _getParentMutation2;\n\n      this.onDeactivated(targetProps, activePoints);\n      var inactiveMutations = activePoints.length ? activePoints.map(function (point) {\n        return _this2.getInactiveMutations(targetProps, point);\n      }) : [];\n      return (_getParentMutation2 = this.getParentMutation([], mousePosition, parentSVG)).concat.apply(_getParentMutation2, _toConsumableArray(inactiveMutations));\n    }\n\n    var _getVoronoiPoints = this.getVoronoiPoints(targetProps, mousePosition),\n        _getVoronoiPoints$poi = _getVoronoiPoints.points,\n        points = _getVoronoiPoints$poi === void 0 ? [] : _getVoronoiPoints$poi,\n        index = _getVoronoiPoints.index;\n\n    var parentMutations = this.getParentMutation(points, mousePosition, parentSVG, index);\n\n    if (activePoints.length && isEqual(points, activePoints)) {\n      return parentMutations;\n    } else {\n      this.onActivated(targetProps, points);\n      this.onDeactivated(targetProps, activePoints);\n      var activeMutations = points.length ? points.map(function (point) {\n        return _this2.getActiveMutations(targetProps, point);\n      }) : [];\n\n      var _inactiveMutations = activePoints.length ? activePoints.map(function (point) {\n        return _this2.getInactiveMutations(targetProps, point);\n      }) : [];\n\n      return parentMutations.concat.apply(parentMutations, _toConsumableArray(_inactiveMutations).concat(_toConsumableArray(activeMutations)));\n    }\n  }\n};\nexport default {\n  onMouseLeave: VoronoiHelpers.onMouseLeave.bind(VoronoiHelpers),\n  onMouseMove: _throttle(VoronoiHelpers.onMouseMove.bind(VoronoiHelpers), 32, // eslint-disable-line no-magic-numbers\n  {\n    leading: true,\n    trailing: false\n  })\n};","map":null,"metadata":{},"sourceType":"module"}