{"ast":null,"code":"var _jsxFileName = \"/Users/developer/Desktop/Software_Projects/GolfApp/my-app/client/src/Login/Register.js\";\nimport React, { Component } from 'react';\nimport Login from './Login';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { connect, Provider } from \"react-redux\";\nimport { registerGolfer } from \"../Redux/actions/authActions\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      RegisterError: false,\n      Username: null,\n      Password: null,\n      FirstName: null,\n      LastName: null\n    };\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleFirstNameChange = this.handleFirstNameChange.bind(this);\n    this.handleLastNameChange = this.handleLastNameChange.bind(this);\n    this.addUser = this.addUser.bind(this);\n  }\n\n  addUser(event) {\n    const newGolfer = {\n      username: this.state.Username,\n      password: this.state.Password,\n      first_name: this.state.FirstName,\n      last_name: this.state.LastName,\n      friends: \"\",\n      differntials: \"\",\n      handicap: \"\",\n      outings: \"\",\n      pendingOutings: \"\",\n      confirmedOutings: \"\",\n      sentRequests: \"\",\n      receivedRequests: \"\"\n    };\n    this.props.registerGolfer(newGolfer).then(res => {\n      if (res.err) {\n        if (res.err.username == \"Username must be at least 3 characters\" && res.err.password == \"Password must be at least 3 characters\") {\n          this.setState({\n            RegisterError: \"UsernamePasswordLength\"\n          });\n        } else if (res.err.username == \"Username must be at least 3 characters\") {\n          this.setState({\n            RegisterError: \"UsernameLength\"\n          });\n        } else if (res.err.password == \"Password must be at least 3 characters\") {\n          this.setState({\n            RegisterError: \"PasswordLength\"\n          });\n        }\n      } else if (res.username == \"User already exists\") {\n        this.setState({\n          RegisterError: \"UsernameTaken\"\n        });\n      } else {\n        this.setState({\n          RegisterError: \"None\"\n        });\n      }\n    }); //const result = this.props.append(newGolfer);\n\n    event.preventDefault();\n  }\n\n  handleUsernameChange(event) {\n    this.setState({\n      Username: event.target.value\n    });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({\n      Password: event.target.value\n    });\n  }\n\n  handleFirstNameChange(event) {\n    this.setState({\n      FirstName: event.target.value\n    });\n  }\n\n  handleLastNameChange(event) {\n    this.setState({\n      LastName: event.target.value\n    });\n  }\n\n  render() {\n    let RegisterMessage;\n\n    if (this.state.RegisterError == false) {\n      RegisterMessage = null;\n    } else if (this.state.RegisterError == \"UsernameLength\") {\n      RegisterMessage = React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Username must be greater than 3 characters\");\n    } else if (this.state.RegisterError == \"PasswordLength\") {\n      RegisterMessage = React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Username must be greater than 3 characters\");\n    } else if (this.state.RegisterError == \"UsernameTaken\") {\n      RegisterMessage = React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Username has been taken\");\n    } else if (this.state.RegisterError == \"UsernamePasswordLength\") {\n      RegisterMessage = React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Username and Password must be greater than 3 characters\");\n    } else if (this.state.RegisterError == \"None\") {\n      RegisterMessage = React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Username and Password must be greater than 3 characters\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Virtual Caddy\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, RegisterMessage, React.createElement(\"form\", {\n      onSubmit: this.addUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Your Username:\", React.createElement(\"input\", {\n      type: \"text\",\n      id: \"Username\",\n      value: this.state.Username || '',\n      onChange: this.handleUsernameChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Your Password:\", React.createElement(\"input\", {\n      type: \"text\",\n      id: \"Password\",\n      value: this.state.Password || '',\n      onChange: this.handlePasswordChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Your First Name:\", React.createElement(\"input\", {\n      type: \"text\",\n      id: \"FirstName\",\n      value: this.state.FirstName || '',\n      onChange: this.handleFirstNameChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), \"  \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Your Last Name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"LastName\",\n      value: this.state.LastName || '',\n      onChange: this.handleLastNameChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Create User\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"button\",\n      id: \"LoginReturnButton\",\n      onClick: e => this.props.setRegister(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Login\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  registerGolfer\n})(Register);","map":{"version":3,"sources":["/Users/developer/Desktop/Software_Projects/GolfApp/my-app/client/src/Login/Register.js"],"names":["React","Component","Login","Container","Row","Col","connect","Provider","registerGolfer","Register","constructor","props","state","RegisterError","Username","Password","FirstName","LastName","handleUsernameChange","bind","handlePasswordChange","handleFirstNameChange","handleLastNameChange","addUser","event","newGolfer","username","password","first_name","last_name","friends","differntials","handicap","outings","pendingOutings","confirmedOutings","sentRequests","receivedRequests","then","res","err","setState","preventDefault","target","value","render","RegisterMessage","e","setRegister","mapStateToProps","auth","errors"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Login from './Login';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport { connect, Provider } from \"react-redux\";\nimport { registerGolfer } from \"../Redux/actions/authActions\";\n\nclass Register extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      RegisterError: false,\n      Username: null,\n      Password: null,\n      FirstName: null,\n      LastName: null\n    }\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleFirstNameChange = this.handleFirstNameChange.bind(this);\n    this.handleLastNameChange = this.handleLastNameChange.bind(this);\n    this.addUser = this.addUser.bind(this);\n  }\n\n  addUser(event){\n    const newGolfer = {\n      username: this.state.Username,\n      password: this.state.Password,\n      first_name: this.state.FirstName,\n      last_name: this.state.LastName,\n      friends: \"\",\n      differntials: \"\",\n      handicap: \"\",\n      outings: \"\",\n      pendingOutings: \"\",\n      confirmedOutings: \"\",\n      sentRequests: \"\",\n      receivedRequests: \"\"\n    }\n\n    this.props.registerGolfer(newGolfer).then(res => {\n\n\n      if(res.err){\n        if(res.err.username == \"Username must be at least 3 characters\" &&\n           res.err.password == \"Password must be at least 3 characters\"){\n             this.setState({\n               RegisterError: \"UsernamePasswordLength\"\n             })\n        }\n        else if(res.err.username == \"Username must be at least 3 characters\"){\n          this.setState({\n            RegisterError: \"UsernameLength\"\n          })\n        }\n        else if(res.err.password == \"Password must be at least 3 characters\"){\n          this.setState({\n            RegisterError: \"PasswordLength\"\n          })\n        }\n      }\n      else if(res.username == \"User already exists\"){\n        this.setState({\n          RegisterError: \"UsernameTaken\"\n        })\n      }\n      else{\n        this.setState({\n          RegisterError: \"None\"\n        })\n      }\n    })\n    //const result = this.props.append(newGolfer);\n    event.preventDefault();\n  }\n\n  handleUsernameChange(event){\n    this.setState({Username: event.target.value});\n  }\n\n  handlePasswordChange(event){\n    this.setState({Password: event.target.value});\n  }\n\n  handleFirstNameChange(event){\n    this.setState({FirstName: event.target.value});\n  }\n\n  handleLastNameChange(event){\n    this.setState({LastName: event.target.value});\n  }\n\n  render(){\n\n    let RegisterMessage;\n    if(this.state.RegisterError == false){\n      RegisterMessage = null\n    }\n    else if(this.state.RegisterError == \"UsernameLength\"){\n      RegisterMessage = <h4>Username must be greater than 3 characters</h4>\n    }\n    else if(this.state.RegisterError == \"PasswordLength\"){\n      RegisterMessage = <h4>Username must be greater than 3 characters</h4>\n    }\n    else if(this.state.RegisterError == \"UsernameTaken\"){\n      RegisterMessage = <h4>Username has been taken</h4>\n    }\n    else if(this.state.RegisterError == \"UsernamePasswordLength\"){\n      RegisterMessage = <h4>Username and Password must be greater than 3 characters</h4>\n    }\n    else if(this.state.RegisterError == \"None\"){\n      RegisterMessage = <h4>Username and Password must be greater than 3 characters</h4>\n    }\n\n    return(\n        <div>\n        <Container>\n          <Row className=\"justify-content-md-center\">\n            <Col md=\"auto\">\n              <div>\n                <h1>Virtual Caddy</h1>\n              </div>\n              <div>\n                {RegisterMessage}\n                <form onSubmit={this.addUser}>\n                  <label>\n                    Your Username:\n                    <input type=\"text\" id=\"Username\"\n                    value={this.state.Username || ''}\n                    onChange={this.handleUsernameChange}\n                    required/>\n                  </label> <br />\n                  <label>\n                    Your Password:\n                    <input type=\"text\" id=\"Password\"\n                    value={this.state.Password || ''}\n                    onChange={this.handlePasswordChange}\n                    required/> <br />\n                  </label> <br />\n                  <label>\n                    Your First Name:\n                    <input type=\"text\" id=\"FirstName\"\n                    value={this.state.FirstName || ''}\n                    onChange={this.handleFirstNameChange}\n                    required/> <br />\n                  </label>  <br />\n                  <label>\n                    Your Last Name:\n                  </label>\n                    <input type=\"text\" id=\"LastName\"\n                    value={this.state.LastName || ''}\n                    onChange={this.handleLastNameChange}\n                    required/> <br />\n                  <input type=\"submit\" value=\"Create User\" />\n                </form>\n              <button type=\"button\" id=\"LoginReturnButton\" onClick={e => this.props.setRegister(e)}>\n                Login\n              </button>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerGolfer }\n)(Register);\n"]},"metadata":{},"sourceType":"module"}