{"ast":null,"code":"import _assign from \"lodash/assign\";\nimport _isFunction from \"lodash/isFunction\";\nimport _defaults from \"lodash/defaults\";\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helpers, CommonProps, Path } from \"victory-core\";\nimport * as d3Shape from \"d3-shape\";\n\nvar getPath = function (props) {\n  var slice = props.slice,\n      radius = props.radius,\n      innerRadius = props.innerRadius;\n\n  if (_isFunction(props.pathFunction)) {\n    return props.pathFunction(slice);\n  }\n\n  var cornerRadius = Helpers.evaluateProp(props.cornerRadius, props);\n  var padAngle = Helpers.degreesToRadians(Helpers.evaluateProp(props.padAngle, props));\n  var startAngle = Helpers.degreesToRadians(Helpers.evaluateProp(props.sliceStartAngle, props));\n  var endAngle = Helpers.degreesToRadians(Helpers.evaluateProp(props.sliceEndAngle, props));\n  var pathFunction = d3Shape.arc().cornerRadius(cornerRadius).outerRadius(radius).innerRadius(innerRadius);\n  return pathFunction(_defaults({\n    startAngle: startAngle,\n    endAngle: endAngle,\n    padAngle: padAngle\n  }, slice));\n};\n\nvar evaluateProps = function (props) {\n  /* Potential evaluated props are\n    1) style\n    2) radius\n    3) innerRadius\n    4) everything else\n  */\n  var style = Helpers.evaluateStyle(props.style, props);\n  var radius = Helpers.evaluateProp(props.radius, _assign({}, props, {\n    style: style\n  }));\n  var innerRadius = Helpers.evaluateProp(props.innerRadius, _assign({}, props, {\n    style: style,\n    radius: radius\n  }));\n  return _assign({}, props, {\n    style: style,\n    radius: radius,\n    innerRadius: innerRadius\n  });\n};\n\nvar Slice = function (props) {\n  props = evaluateProps(props);\n  var defaultTransform = props.origin ? \"translate(\".concat(props.origin.x, \", \").concat(props.origin.y, \")\") : undefined;\n  return React.cloneElement(props.pathComponent, _objectSpread({}, props.events, {\n    d: getPath(props),\n    style: props.style,\n    transform: props.transform || defaultTransform,\n    className: props.className,\n    role: props.role,\n    shapeRendering: props.shapeRendering,\n    clipPath: props.clipPath\n  }));\n};\n\nSlice.propTypes = _objectSpread({}, CommonProps.primitiveProps, {\n  cornerRadius: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  datum: PropTypes.object,\n  innerRadius: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  padAngle: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  pathComponent: PropTypes.element,\n  pathFunction: PropTypes.func,\n  radius: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  slice: PropTypes.object,\n  sliceEndAngle: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  sliceStartAngle: PropTypes.oneOfType([PropTypes.number, PropTypes.func])\n});\nSlice.defaultProps = {\n  pathComponent: React.createElement(Path, null),\n  role: \"presentation\",\n  shapeRendering: \"auto\"\n};\nexport default Slice;","map":null,"metadata":{},"sourceType":"module"}