{"ast":null,"code":"var _jsxFileName = \"/Users/developer/Desktop/Software_Projects/GolfApp/my-app/client/src/Main/Map/Demo.js\";\nimport React, { Component } from \"react\";\nimport Map from \"./Map\";\nimport { geolocated } from \"react-geolocated\";\nimport { StandaloneSearchBox } from '@react-google-maps/api';\nimport { KmlLayer } from '@react-google-maps/api';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport { geocodeByAddress } from 'react-places-autocomplete';\nimport Geocode from \"react-geocode\";\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: []\n    };\n  }\n\n  getLocation(event) {\n    console.log(\"getLocation Clicked\");\n    console.log(\"address: \", this.state.address);\n    console.log(\"# of addresses : \", this.state.address.length);\n    geocodeByAddress('Los Angeles, CA').then(results => console.log(\"results :\", results)).catch(error => console.error(error));\n    Geocode.setApiKey(\"AIzaSyC602BxQt0PqL-Dv-mzDS8i-8f6Q4aoVtA\");\n    Geocode.enableDebug();\n    Geocode.fromAddress(\"Eiffel Tower\").then(response => {\n      const _response$results$0$g = response.results[0].geometry.location,\n            lat = _response$results$0$g.lat,\n            lng = _response$results$0$g.lng;\n      console.log(lat, lng);\n    }, error => {\n      console.error(error);\n    });\n    Geocode.fromAddress(this.state.address).then(response => {\n      const _response$results$0$g2 = response.results[0].geometry.location,\n            lat = _response$results$0$g2.lat,\n            lng = _response$results$0$g2.lng;\n      console.log(lat, lng);\n    }, error => {\n      console.error(error);\n    });\n  }\n\n  render() {\n    return !this.props.isGeolocationAvailable ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Your browser does not support Geolocation\") : !this.props.isGeolocationEnabled ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Geolocation is not enabled\") : this.props.coords ? React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"latitude\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.props.coords.latitude)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"longitude\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.props.coords.longitude)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"altitude\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.props.coords.altitude)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"heading\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.props.coords.heading)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"speed\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.props.coords.speed))), React.createElement(LoadScript, {\n      id: \"script-loader\",\n      googleMapsApiKey: \"AIzaSyBduZ-iDIEaq4AI6MrEoJb6_OV_9WXM1y8\",\n      libraries: ['places'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(GoogleMap, {\n      id: \"example-map\",\n      mapContainerStyle: {\n        height: \"400px\",\n        width: \"800px\"\n      },\n      zoom: 14,\n      center: {\n        lat: this.props.coords.latitude,\n        lng: this.props.coords.longitude\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(StandaloneSearchBox, {\n      onLoad: ref => this.searchBox = ref,\n      onPlacesChanged: () => console.log(\"Search box: \", this.searchBox) //() => this.setState({address: this.searchBox.getPlaces()})\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Customized your placeholder\",\n      style: {\n        boxSizing: `border-box`,\n        border: `1px solid transparent`,\n        width: `240px`,\n        height: `32px`,\n        padding: `0 12px`,\n        borderRadius: `3px`,\n        boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n        fontSize: `14px`,\n        outline: `none`,\n        textOverflow: `ellipses`,\n        position: \"absolute\",\n        left: \"50%\",\n        marginLeft: \"-120px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })))), React.createElement(\"button\", {\n      type: \"button\",\n      id: \"saveHandicap\",\n      onClick: e => this.getLocation(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Get Location\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Getting the location data\\u2026 \");\n  }\n\n}\n\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: false\n  },\n  userDecisionTimeout: 5000\n})(Demo);","map":{"version":3,"sources":["/Users/developer/Desktop/Software_Projects/GolfApp/my-app/client/src/Main/Map/Demo.js"],"names":["React","Component","Map","geolocated","StandaloneSearchBox","KmlLayer","GoogleMap","LoadScript","PlacesAutocomplete","geocodeByAddress","Geocode","Demo","constructor","props","state","address","getLocation","event","console","log","length","then","results","catch","error","setApiKey","enableDebug","fromAddress","response","geometry","location","lat","lng","render","isGeolocationAvailable","isGeolocationEnabled","coords","latitude","longitude","altitude","heading","speed","height","width","ref","searchBox","boxSizing","border","padding","borderRadius","boxShadow","fontSize","outline","textOverflow","position","left","marginLeft","e","positionOptions","enableHighAccuracy","userDecisionTimeout"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Map from \"./Map\";\nimport { geolocated } from \"react-geolocated\";\nimport { StandaloneSearchBox } from '@react-google-maps/api';\nimport { KmlLayer } from '@react-google-maps/api';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport { geocodeByAddress } from 'react-places-autocomplete';\nimport Geocode from \"react-geocode\";\n\nclass Demo extends React.Component {\n    constructor(props){\n      super(props);\n        this.state = {\n          address: []\n        }\n\n    }\n\n\n    getLocation(event){\n      console.log(\"getLocation Clicked\");\n\n      console.log(\"address: \", this.state.address);\n\n      console.log(\"# of addresses : \", this.state.address.length);\n\n      geocodeByAddress('Los Angeles, CA')\n        .then(results => console.log(\"results :\", results))\n        .catch(error => console.error(error));\n\n      Geocode.setApiKey(\"AIzaSyC602BxQt0PqL-Dv-mzDS8i-8f6Q4aoVtA\");\n\n      Geocode.enableDebug();\n\n      Geocode.fromAddress(\"Eiffel Tower\").then(\n        response => {\n          const { lat, lng } = response.results[0].geometry.location;\n          console.log(lat, lng);\n        },\n        error => {\n          console.error(error);\n        }\n      );\n\n      Geocode.fromAddress(this.state.address).then(\n        response => {\n          const { lat, lng } = response.results[0].geometry.location;\n          console.log(lat, lng);\n        },\n        error => {\n          console.error(error);\n        }\n      );\n    }\n\n    render() {\n        return !this.props.isGeolocationAvailable ? (\n            <div>Your browser does not support Geolocation</div>\n        ) : !this.props.isGeolocationEnabled ? (\n            <div>Geolocation is not enabled</div>\n        ) : this.props.coords ? (\n            <table>\n                <tbody>\n                    <tr>\n                        <td>latitude</td>\n                        <td>{this.props.coords.latitude}</td>\n                    </tr>\n                    <tr>\n                        <td>longitude</td>\n                        <td>{this.props.coords.longitude}</td>\n                    </tr>\n                    <tr>\n                        <td>altitude</td>\n                        <td>{this.props.coords.altitude}</td>\n                    </tr>\n                    <tr>\n                        <td>heading</td>\n                        <td>{this.props.coords.heading}</td>\n                    </tr>\n                    <tr>\n                        <td>speed</td>\n                        <td>{this.props.coords.speed}</td>\n                    </tr>\n                </tbody>\n\n                <LoadScript\n                id=\"script-loader\"\n                googleMapsApiKey=\"AIzaSyBduZ-iDIEaq4AI6MrEoJb6_OV_9WXM1y8\"\n                libraries={['places']}\n                >\n                  <GoogleMap\n                    id='example-map'\n                    mapContainerStyle={{\n                      height: \"400px\",\n                      width: \"800px\"\n                    }}\n                    zoom={14}\n                    center={{\n                      lat: this.props.coords.latitude,\n                      lng: this.props.coords.longitude\n                    }}\n                  >\n                    <StandaloneSearchBox\n                      onLoad={ref => this.searchBox = ref}\n                      onPlacesChanged={\n\n                        () => console.log(\"Search box: \", this.searchBox)\n                        //() => this.setState({address: this.searchBox.getPlaces()})\n                      }\n                    >\n                      <input\n                        type=\"text\"\n                        placeholder=\"Customized your placeholder\"\n                        style={{\n                          boxSizing: `border-box`,\n                          border: `1px solid transparent`,\n                          width: `240px`,\n                          height: `32px`,\n                          padding: `0 12px`,\n                          borderRadius: `3px`,\n                          boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n                          fontSize: `14px`,\n                          outline: `none`,\n                          textOverflow: `ellipses`,\n                          position: \"absolute\",\n                          left: \"50%\",\n                          marginLeft: \"-120px\"\n                        }}\n                      />\n                    </StandaloneSearchBox>\n                  </GoogleMap>\n                </LoadScript>\n                <button type=\"button\" id=\"saveHandicap\" onClick={e => this.getLocation()}>\n                  Get Location\n                </button>\n            </table>\n        ) : (\n            <div>Getting the location data&hellip; </div>\n        );\n    }\n}\n\nexport default geolocated({\n    positionOptions: {\n        enableHighAccuracy: false,\n    },\n    userDecisionTimeout: 5000,\n})(Demo);\n"]},"metadata":{},"sourceType":"module"}